@model MotoKS.Models.Users
@{
    MotoKS.Models.Context ctx = new MotoKS.Models.Context();
    ViewBag.Title = "SignIn";
}

@using (Html.BeginForm("Index", "SignIn", FormMethod.Post))
{
    <div class="row">
        <div class="col-sm-12">
            <h2 style="color: #1a1a1a; text-align: center;"><b>Tworzenie nowego konta</b></h2>
        </div>
        @if (ViewBag.ErrorMessage != null)
        {
            <div class="col-sm-12">
                <h4 style="color: orangered; text-align: center;"> @ViewBag.ErrorMessage; </h4>
            </div>
            <hr>
        }
        <div class="container margins col-sm-8 col-sm-offset-2 col-xs-10 col-xs-offset-1" style="background-color: #f2f2f2;">
            <hr>
            <form class="form-horizontal" method=post action="">
                <div class="form-group">
                    <label class="control-label col-sm-3 col-sm-offset-1" style="white-space: nowrap;" for="mail">E-mail:</label>
                    <div class="col-sm-7">
                        @Html.TextBoxFor(x => x.Mail, new { type = "email", @class = "form-control", maxlength = 30, onblur = "check()", id = "mail", name = "mail" }) <br />
                    </div>
                    <div class="col-sm-1">
                        <span id="user-availability-status"></span>
                    </div>
                    <hr>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-3 col-sm-offset-1" for="name">Imię:</label>
                    <div class="col-sm-7">
                        @Html.TextBoxFor(x => x.FirstName, new { type = "text", @class = "form-control", maxlength = 20 }) <br />
                    </div>
                    <hr>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-3 col-sm-offset-1" for="city">Miasto:</label>
                    <div class="col-sm-7">
                        @Html.TextBoxFor(x => x.CityName, new { type = "text", @class = "form-control", maxlength = 30 }) <br />
                    </div>
                    <hr>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-3 col-sm-offset-1" for="post">Kod pocztowy:</label>
                    <div class="col-sm-7">
                        @Html.TextBoxFor(x => x.PostCode, new { type = "text", @class = "form-control", maxlength = 10 }) <br />
                    </div>
                    <hr>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-3 col-sm-offset-1" for="phone">Telefon:</label>
                    <div class="col-sm-7">
                        @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", maxlength = 10 }) <br />
                    </div>
                    <hr>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-3 col-sm-offset-1" for="password">Hasło:</label>
                    <div class="col-sm-7">
                        @Html.TextBoxFor(x => x.Password, new { type = "password", @class = "form-control", id = "password", maxlength = 20, placeholder = "min. 6 znaków", pattern = ".{0}|.{6,}", onblur = "checkpasslen()" }) <br />
                    </div>
                    <hr>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-3 col-sm-offset-1" for="cpassword">Powtórz hasło:</label>
                    <div class="col-sm-7">
                        <input type="password" class="form-control" id="cpassword" name="cpassword" required onblur="checkpass()" disabled> <br />
                    </div>
                    <hr>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-4 col-sm-2">
                        <button type="submit" class="btn btn-primary">Zatwierdź</button>
                    </div>
                    <hr>
                </div>
            </form>
        </div>
    </div>
}

<script>
    function checkpasslen() {
        var p = document.getElementById('password').value;
        if (p.length < 7 && p.length > 0) {
            alert("Hasło musi być dłuższe niż 6 znaków!");
            setTimeout("document.getElementById('password').focus()", 0);
        }
        if (p.length > 6)
            $("#cpassword").prop('disabled', false);
    }

    function checkpass() {
        var p = document.getElementById('password').value;
        var c = document.getElementById('cpassword').value;
        if (p != c) {
            alert("Hasła się nie zgadzają")
            document.getElementById('cpassword').value = "";
        }
    }

    function check() {
        $("#loaderIcon").show();
        jQuery.ajax({
            url: '@Url.Action("CheckMail", "SignIn")',
            data: 'mail=' + $("#mail").val(),
            type: "GET",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $("#user-availability-status").html(data);
            },
            error: function () { }
        });
    }
</script>

